name: Rust

on:
  push:
    branches:
     - main
    tags:
     - "*"
  pull_request:
    branches:
     - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-20.04,   target: x86_64-unknown-linux-gnu,   platform: linux-x64,    cross: general }
          # - { os: ubuntu-22.04,   target: aarch64-unknown-linux-gnu,  platform: linux-arm64,  cross: cannot }
          # - { os: ubuntu-20.04,   target: x86_64-unknown-linux-musl,  platform: linux-musl,   cross: cross }
          - { os: ubuntu-22.04,   target: x86_64-unknown-freebsd,     platform: linux-bsd,    cross: cross }
          - { os: macos-latest,   target: x86_64-apple-darwin,        platform: darwin-x64,   cross: general }
          - { os: macos-latest,   target: aarch64-apple-darwin,       platform: darwin-arm64, cross: general }
          - { os: windows-latest, target: x86_64-pc-windows-msvc,     platform: win32-x64,    cross: general }
          - { os: windows-latest, target: i686-pc-windows-msvc,       platform: win32-ia32,   cross: general }
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Build - General
        if: ${{ matrix.cross == 'general' }}
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}  -p luap
      - name: Build - cross
        if: ${{ matrix.cross == 'cross' }}
        run: |
          cargo install cross
          cross build --release --target ${{ matrix.target }} -p luap
      - name: Build - linux-aarch64
        if: ${{ matrix.platform == 'linux-arm64' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          sudo apt-get install -y libc6-dev-arm64-cross
          sudo apt-get install -y libssl-dev
          rustup target add aarch64-unknown-linux-gnu
          cargo build --release --target aarch64-unknown-linux-gnu -p luap
      - name: Build - macos-x86_64
        if: ${{ matrix.platform == 'darwin-x64' }}
        run: |
          brew update
          brew install openssl
          echo 'export PATH="/usr/local/opt/openssl/bin:$PATH"' >> $GITHUB_ENV
          echo 'export LDFLAGS="-L/usr/local/opt/openssl/lib"' >> $GITHUB_ENV
          echo 'export CPPFLAGS="-I/usr/local/opt/openssl/include"' >> $GITHUB_ENV
          rustup target add x86_64-apple-darwin
          cargo build --release --target x86_64-apple-darwin -p luap
  
      - name: package-unix
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          mkdir -p ${{ github.workspace }}/artifact
          cp ${{ github.workspace }}/target/${{ matrix.target }}/release/luap ${{ github.workspace }}/artifact/
      - name: package-windows
        if: ${{ matrix.os == 'windows-latest'  }}
        run: |
          New-Item -ItemType Directory -Path "${{ github.workspace }}/artifact"
          Copy-Item -Path ${{ github.workspace }}\target\${{ matrix.target }}\release\luap.exe -Destination ${{ github.workspace }}\artifact\
        shell: pwsh
      - name: Upload
        uses: actions/upload-artifact@v3
        with: 
          name: luap-${{ matrix.platform }}
          path: ${{ github.workspace }}/artifact/
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download
        uses: actions/download-artifact@v3
      - name: zip windows package win32-x64
        uses: TheDoctor0/zip-release@v0.2.1
        with:
          filename: luap-win32-x64.zip
          path: luap-win32-x64
      - name: zip windows package win32-ia32
        uses: TheDoctor0/zip-release@v0.2.1
        with:
          filename: luap-win32-ia32.zip
          path: luap-win32-ia32
      - name: tar unix
        run: |
          chmod +x luap-linux-x64/luap
          tar -czf luap-linux-x64.tar.gz -C luap-linux-x64 .
          chmod +x luap-linux-arm64/luap
          tar -czf luap-linux-aarch64.tar.gz -C luap-linux-arm64 .
          chmod +x luap-linux-musl/luap
          tar -czf luap-linux-musl.tar.gz -C luap-linux-musl .
          chmod +x luap-linux-bsd/luap
          tar -czf luap-linux-bsd.tar.gz -C luap-linux-bsd .
          chmod +x luap-darwin-x64/luap
          tar -czf luap-darwin-x64.tar.gz -C luap-darwin-x64 .
          chmod +x luap-darwin-arm64/luap
          tar -czf luap-darwin-arm64.tar.gz -C luap-darwin-arm64 .
      - name: Release
        uses: softprops/action-gh-release@v2
        with: 
          name: luap
          draft: false
          generate_release_notes: true
          files: |
            luap-win32-x64.zip
            luap-win32-ia32.zip
            luap-linux-x64.tar.gz
            luap-linux-aarch64.tar.gz
            luap-linux-musl.tar.gz
            luap-linux-bsd.tar.gz
            luap-darwin-x64.tar.gz
            luap-darwin-arm64.tar.gz
          token: ${{ secrets.RELEASE }}
